<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>1</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>Booth_Multiplier</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>A:8,B:8</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>Code</string>
          <string>//Booth_Multiplier
module Booth_Multiplier(
    input [7:0] A,
    input [7:0] B,
    output reg [15:0] S,
    output [15:0] S1
);

assign S1 = A*B; //S1为A*B的正确结果,用于验证

//计算-A,2A,-2A
wire [15:0] A0;
wire [15:0] A1;
wire [15:0] A2;
wire [15:0] A3;
assign A0 = {8&apos;b0, A};
assign A1 = ~A0 + 1&apos;b1; //-A
assign A2 = A0&lt;&lt;1; //2A
assign A3 = ~A2 + 1&apos;b1; //-2A

//对B进行radix-4编码
wire [8:0] B1;
assign B1 = B&lt;&lt;1;

wire [3:0] E[3:0];
assign E[0] = 2-2*B1[2*0+2]+B1[2*0+1]+B1[2*0];
assign E[1] = 2-2*B1[2*1+2]+B1[2*1+1]+B1[2*1];
assign E[2] = 2-2*B1[2*2+2]+B1[2*2+1]+B1[2*2];
assign E[3] = 2-2*B1[2*3+2]+B1[2*3+1]+B1[2*3];

wire [15:0] P[3:0];
assign P[0] = (E[0]==0)?A3&lt;&lt;(2*0):(E[0]==1)?A1&lt;&lt;(2*0):(E[0]==2)?16&apos;b0:(E[0]==3)?A0&lt;&lt;(2*0):A2&lt;&lt;(2*0);
assign P[1] = (E[1]==0)?A3&lt;&lt;(2*1):(E[1]==1)?A1&lt;&lt;(2*1):(E[1]==2)?16&apos;b0:(E[1]==3)?A0&lt;&lt;(2*1):A2&lt;&lt;(2*1);
assign P[2] = (E[2]==0)?A3&lt;&lt;(2*2):(E[2]==1)?A1&lt;&lt;(2*2):(E[2]==2)?16&apos;b0:(E[2]==3)?A0&lt;&lt;(2*2):A2&lt;&lt;(2*2);
assign P[3] = (E[3]==0)?A3&lt;&lt;(2*3):(E[3]==1)?A1&lt;&lt;(2*3):(E[3]==2)?16&apos;b0:(E[3]==3)?A0&lt;&lt;(2*3):A2&lt;&lt;(2*3);

wire [15:0] P_sum;
assign P_sum = P[0] + P[1] + P[2] + P[3];

//计算A和B的非0最高位之和
reg [3:0]bit_A;
reg [3:0]bit_B;
reg [7:0]bit_sum;
 
always @(P_sum) begin
    bit_A = 7;
    bit_B = 7;
    while (A[bit_A] == 0) begin
        bit_A = bit_A - 1;
    end
    while (B[bit_B] == 0) begin
        bit_B = bit_B - 1;
    end
    bit_sum = bit_A + bit_B+1;

    S = P_sum&lt;&lt;(15-bit_sum);
    S = S&gt;&gt;(15-bit_sum);
end

endmodule</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>S:16,S1:16</string>
        </entry>
      </elementAttributes>
      <pos x="520" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>A</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="460" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>B</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>8</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="460" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="800" y="520"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>S</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>16</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>bin</intFormat>
        </entry>
      </elementAttributes>
      <pos x="800" y="380"/>
    </visualElement>
    <visualElement>
      <elementName>Testcase</elementName>
      <elementAttributes>
        <entry>
          <string>Testdata</string>
          <testData>
            <dataString>A B S
0 1 0
25 5 125
11 45 495
14 19 266
19 81 1539
114 19 2166
114 51 5814</dataString>
          </testData>
        </entry>
      </elementAttributes>
      <pos x="560" y="520"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="460" y="440"/>
      <p2 x="520" y="440"/>
    </wire>
    <wire>
      <p1 x="720" y="440"/>
      <p2 x="800" y="440"/>
    </wire>
    <wire>
      <p1 x="720" y="520"/>
      <p2 x="800" y="520"/>
    </wire>
    <wire>
      <p1 x="460" y="520"/>
      <p2 x="520" y="520"/>
    </wire>
    <wire>
      <p1 x="800" y="380"/>
      <p2 x="800" y="440"/>
    </wire>
    <wire>
      <p1 x="720" y="460"/>
      <p2 x="720" y="520"/>
    </wire>
    <wire>
      <p1 x="520" y="460"/>
      <p2 x="520" y="520"/>
    </wire>
    <wire>
      <p1 x="460" y="380"/>
      <p2 x="460" y="440"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>